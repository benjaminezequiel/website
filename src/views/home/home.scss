@use '../../styles/utils.scss' as utils;

body {
  background-position: center;
  background-image: url('/public/assets/plus_sign.svg');
  background-size: 32px;

  overflow-x: hidden;
  margin: 0;
  padding: 0;
  background-color: var(--gray-1000);

  color: var(--gray-1200);
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100svh;
  width: 100dvw;
  height: 100dvh;

  // background-image: url('/src/assets/plus_sign.svg');
  // background-size: 64px;
  // background-position: center;
}

.page--container {
  @include utils.center-flex();
  padding: var(--space-6);
  width: 100%;
  height: 100%;
  max-width: 100dvw;
  max-height: 100svh;
  overflow: hidden;
}

.page {
  @include utils.center-flex();
  background-color: var(--gray-100);
  width: 100%;
  height: 100%;
  max-width: 100dvw;
  max-height: 100svh;
  position: relative;
  z-index: 1;

  $border-size: 4px;
  --inset-size: clamp(4px, 1vw, 8px);
  $inset-setup: clamp(160px, 32vw, 340px);
  $start-inset: $inset-setup;
  $end-inset: calc(100% - $inset-setup);
  $inset-offset: clamp(8px, 1vw, 12px);
  border-radius: 12px;

  clip-path: polygon(
    $border-size 0%,

    calc($start-inset - $inset-offset) 0%,
    $start-inset var(--inset-size),
    $end-inset var(--inset-size),
    calc($end-inset + $inset-offset) 0%,

    calc(100% - $border-size) 0%,
    100% $border-size,

    100% calc($start-inset - $inset-offset),
    calc(100% - var(--inset-size)) $start-inset,
    calc(100% - var(--inset-size)) $end-inset,
    100% calc($end-inset + $inset-offset),
    100% calc(100% - $border-size),
    calc(100% - $border-size) 100%,

    calc($end-inset + $inset-offset) 100%,
    $end-inset calc(100% - var(--inset-size)),
    $start-inset calc(100% - var(--inset-size)),
    calc($start-inset - $inset-offset) 100%,

    $border-size 100%,
    0% calc(100% - $border-size),
    0% calc($end-inset + $inset-offset),
    var(--inset-size) $end-inset,
    var(--inset-size) $start-inset,
    0% calc($start-inset - $inset-offset),
    0 $border-size
  );
  // transition:
  //   width var(--ease-out) 400ms,
  //   height var(--ease-out) 300ms;
}

@mixin window {
  max-width: 64px * 4;
  background-color: rgb(from var(--gray-200) r g b / 1);
  position: absolute;
  left: calc(50% - calc(64px * 8));
  top: calc(50% - calc(64px * 4));
  border-radius: 8px;
  overflow: hidden;
  outline: var(--gray-300) 1px solid;
  z-index: 100;
  // backdrop-filter: blur(12px);

  header {
    border-bottom: 1px solid var(--gray-300);
    padding: 8px;
    display: flex;
    align-items: center;
    gap: 6px;

    .material-symbols-outlined {
      color: var(--gray-700);
      font-size: 20px;
    }
    .close {
      position: absolute;
      right: 8px;
      cursor: pointer;
    }
  }
  section {
    padding: 8px;
    height: fit-content;
    display: flex;
    flex-direction: column;
    gap: 6px;
  }
}

///////////////////////////

//////////////////////////

.content {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);

  @include utils.center-flex;

  .ascii {
    --ascii-scale: 1;

    position: absolute;
    color: var(--gray-300);
    color: var(--brand-color-3);
    clip-path: circle(100px);
    transition: clip-path 450ms cubic-bezier(0.33, 1, 0.68, 1);
    font-weight: 800;
    scale: var(--ascii-scale);

    > * {
      transform: translateY(24px);
    }
    &.expanded {
      clip-path: circle(500px);
      transition: clip-path 1200ms cubic-bezier(0.33, 1, 0.68, 1);
      animation: expand 600ms cubic-bezier(0.34, 1.56, 0.64, 1);
    }
  }

  .welcome_section {
    position: absolute;
    display: flex;
    align-items: flex-start;
    flex-direction: column;
    z-index: 10;
    gap: 2px;

    .welcome_component {
      width: 100%;
      display: flex;
      height: 105px; // forces specific height
      cursor: pointer;

      flex-direction: column;
      align-items: center;
      justify-content: center;

      .primary {
        @include utils.prevent-select;
        font-family: 'Anton';
        pointer-events: none;

        font-size: var(--fluid-fontSize);
        transition:
          scale var(--ease-out) 100ms,
          letter-spacing var(--ease-out) 100ms;
      }

      .secondary {
        @include utils.prevent-select;
        pointer-events: none;
        display: flex;
        position: absolute;
        transition: gap 100ms var(--ease-out);

        > * {
          @include utils.prevent-select;
          font-family: 'Permanent Marker';
          font-size: calc(var(--fluid-fontSize) * 0.8);
          color: #de005d;
          mix-blend-mode: exclusion;
          pointer-events: none;
        }
      }

      &:hover {
        .primary {
          scale: 1.01;
          letter-spacing: 1px;
        }
      }
    }
  }
}

@media (max-width: 600px) {
  .content .ascii {
    --ascii-scale: 0.8;
  }
}

@media (min-width: 600px) and (max-width: 1000px) {
  .content .ascii {
    --ascii-scale: 1.1;
  }
}

@media (min-width: 1400px) {
  .content .ascii {
    --ascii-scale: 1.4;
  }
}

///////////////SECTION: OTHER STUFF

.circle {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border: solid var(--gray-500) 2px;
  width: 640px;
  height: 640px;
  border-radius: 100%;
  z-index: -1;
}

@keyframes expand {
  50% {
    scale: 1.1;
  }
}

@keyframes expand_less {
  from {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    scale: 0.5;
  }
}

@keyframes expand_less_reverse {
  to {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    scale: 0.5;
  }
}

.message {
  @include window;
  width: 320px;
  position: absolute;
  inset: unset;
  max-width: unset;
  top: calc(50% + (64px * 3));
  left: 50%;
  transform: translateX(-50%);
  // bottom: var(--space-6);
  // left: var(--space-6);
  max-width: 100%;
}

.highlights {
  @include window();
  inset: unset;
  right: var(--space-6);
  bottom: var(--space-6);
  display: flex;
  flex-direction: column;
  max-width: unset;
  width: 280px !important;

  .highlight_item {
    h3 {
      margin: 0;
    }
    width: 100%;
    color: unset;
    text-decoration: none;
    display: flex;
    flex-direction: row;
    align-items: baseline;
    justify-content: space-between;
    transition: padding-left var(--ease-out) 200ms;
    position: relative;
    gap: 8px;
    h3 {
      text-wrap: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    > * {
      text-decoration: inherit;
    }
  }
  .highlight_item::before {
    content: '>';
    position: absolute;
    width: 8px;
    height: 8px;
    border-radius: 8px;
    color: var(--brand-color-3);
    opacity: 0;
    transform: translateX(-100%);
    transition: transform 300ms var(--ease-out);
  }
  .highlight_type {
    text-transform: uppercase;
    letter-spacing: 2px;
    font-size: 14px;
  }
}

.highlight_item:hover {
  color: var(--brand-color-3);
  padding-left: 10px;
  &::before {
    opacity: 1;
    transform: translateX(-150%);
  }
}

.shortcuts {
  @include window();
  inset: unset;
  left: var(--space-6);
  bottom: var(--space-6);
}
