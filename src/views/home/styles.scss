@use '../../styles/utils.scss' as utils;

.home__page {
  &::before {
    content: '';
    width: 20%;
    height: 80%;
    background-color: var(--gray-300);
    filter: blur(350px);
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 100%;
    transition: background-color 300ms ease;
  }
  &:has(.expanded) {
    &::before {
      background-color: var(--purple-300);
    }
  }
  @include utils.custom-clip-path();
  overflow: hidden;
  padding: 32px;
  display: grid;
  justify-content: center;
  align-items: center;
  > * {
    grid-row: 1;
    grid-column: 1;
  }

  /* Base dotted pattern */

  background-color: var(--gray-100);
  background-image: radial-gradient(transparent 1px, var(--gray-50, #ffffff) 1px);
  background-size: 8px 8px;

  // box-shadow: var(--purple-300) inset 0px 100px 1600px -100px;
  /* Blur effect with fallback */
  // backdrop-filter: blur(80px);
  // -webkit-backdrop-filter: blur(80px); /* Safari support */

  /* Mask gradient - using both standard and webkit prefix */
  // -webkit-mask-image: linear-gradient(to top, transparent 10%, black 100%);
  // mask-image: linear-gradient(to top, transparent 10%, black 100%);

  position: relative;

  --page-margin: var(--space-1);
  margin: var(--page-margin);

  width: 100%;
  height: 100%;

  max-height: calc(
    100% - calc(var(--page-margin) * 2)
  ); // calculates limit because of weird interaction between margin and height 100%
}

.welcome-title {
  z-index: 10;
}

.floating-ascii {
  --ascii-scale: 2;
  // -webkit-mask-image: linear-gradient(to top, transparent 0%, black 50%);
  // mask-image: linear-gradient(to top, transparent 0%, bla3k 50%);

  scale: var(--ascii-scale);
  color: var(--purple-300);

  font-weight: 800;

  clip-path: circle(100px);
  transition: clip-path 300ms cubic-bezier(0.33, 1, 0.68, 1);

  > * {
    // VISUAL ADJUSTMENT FOR ALIGNMENT WITH TITLE
    transform: translateY(20px);
  }
  &.expanded {
    clip-path: circle(500px);
    transition: clip-path 1200ms cubic-bezier(0.33, 1, 0.68, 1);
    animation: expand 600ms cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}

@media (max-width: 600px) {
  .floating-ascii {
    --ascii-scale: 0.8;
  }
  .home__background {
    --bg-scale: 0.8;
  }
}

@media (min-width: 600px) and (max-width: 1000px) {
  .floating-ascii {
    --ascii-scale: 1.1;
  }
  .home__background {
    --bg-scale: 1.1;
  }
}

@media (min-width: 1400px) {
  .floating-ascii {
    --ascii-scale: 1.4;
  }
  .home__background {
    --bg-scale: 1.4;
  }
}

// ///////////////SECTION: OTHER STUFF

// .circle {
//   position: absolute;
//   left: 50%;
//   top: 50%;
//   transform: translate(-50%, -50%);
//   border: solid var(--gray-500) 2px;
//   width: 640px;
//   height: 640px;
//   border-radius: 100%;
//   z-index: -1;
// }

// @keyframes expand {
//   50% {
//     scale: 1.1;
//   }
// }

// @keyframes expand_less {
//   from {
//     left: 50%;
//     top: 50%;
//     transform: translate(-50%, -50%);
//     scale: 0.5;
//   }
// }
.home__background {
  @include utils.center-flex();
  @include utils.prevent-select;
  height: 100%;
  width: 100%;
  overflow: hidden;
  max-width: 100%;
  max-height: 100%;
  z-index: -1;

  --bg-scale: 0.4;
  &.expanded {
    --bg-scale: 0.8;
  }

  .circle_1,
  .circle_2,
  .circle_3,
  .circle_4,
  .circle_5 {
    border-radius: 100%;
    border: 2px solid var(--gray-100);
    border-style: dashed;
    position: absolute;
    align-self: center;

    &::before {
      content: '';
      width: 32px;
      height: 32px;

      position: absolute;
      top: 0;
      left: 50%;
      transform: translate(-50%, -50%);
      border-radius: 100%;
      border: 1px solid;
      border-color: inherit;
    }

    // Base size
    width: 70vh;
    height: 70vh;

    // Use two separate transform properties
    scale: calc(var(--bg-scale) + calc(var(--index) / 4));
    rotate: 0deg;

    will-change: transform, scale;
    transition:
      scale var(--ease-out) 300ms,
      transform var(--ease-out) 300ms;
    animation: rotate infinite calc(15s * var(--index)) linear;
    &:hover {
      border-color: var(--sea-green-300);
      transform: scale(1.01);
      // cursor: pointer;
      animation-play-state: paused;
    }
  }

  .circle_1 {
    --index: 1;
  }
  .circle_2 {
    --index: 2;
    animation-direction: reverse;
  }
  .circle_3 {
    --index: 3;
  }
  .circle_4 {
    --index: 4;
    animation-direction: reverse;
  }
  .circle_5 {
    --index: 5;
  }
}

@keyframes rotate {
  to {
    rotate: 360deg;
  }
}
